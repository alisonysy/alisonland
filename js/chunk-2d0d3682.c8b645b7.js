(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0d3682"],{"5d41":function(e,t,a){"use strict";a.r(t);var n=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},o=[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("section",[a("h3",[e._v("The most common - "),a("code",{pre:!0},[e._v("createStackNavigator")])]),a("p",[a("code",{pre:!0},[e._v("CreateStackNavigator")]),e._v(" is a function that takes a route configuration object and an options object and returns a React component.\nReact Navigation's stack navigator provides a way for your app to transition between screens and manage "),a("em",[e._v("navigation history")]),e._v(". If your app uses only one stack navigator then it is conceptually similar to how a web browser handles navigation state.")]),a("p",[e._v("A "),a("span",{staticClass:"postDefine"},[e._v("screen component")]),e._v(" is a component that we use in our route configuration.")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":""}},[e._v("const AppNavigator = createStackNavigator(\n  {\n    Home: {\n      screen: HomeScreen,    // <----\n    },\n    Details: {\n      screen: DetailsScreen, // <----\n    },\n  },\n  {\n    initialRouteName: 'Home',\n  }\n);\n")])]),a("h3",[a("code",{pre:!0},[e._v("createSwitchNavigator")]),e._v(" - only show 1 screen at a time")]),a("p",[e._v("Often used in "),a("em",[e._v("authentication flow")]),e._v(".\nBy defautl:")]),a("ul",[a("li",[e._v("Does not handle back actions")]),a("li",[e._v("Resets routes to default state when switched away")])]),a("p",[a("strong",[e._v("Syntax")])]),a("blockquote",[a("p",[a("code",{pre:!0},[e._v("createSwtichNavigator(RouteConfigs,SwitchNavigatorConfig);")])])]),a("h2",[e._v("Navigating to a "),a("strong",[e._v("sibling")]),e._v(" screen")]),a("p",[e._v("We call "),a("code",{pre:!0},[e._v("this.props.navigation.navigate('routeName')")]),e._v(" function:")]),a("pre",{pre:!0},[a("code",{pre:!0,attrs:{"v-pre":""}},[e._v("class screenA extends React.Component{\n  render(){\n    return (\n      <View>\n        <button onPress={()=> this.props.navigation.navigate('screenB')} />\n      </View>\n    )\n  }\n}\n")])]),a("ul",[a("li",[e._v("If we call "),a("code",{pre:!0},[e._v("this.props.navigation.navigate('routeName')")]),e._v(" with a route name that we HAVEN'T defined on a stack navigator, nothing will happen.")]),a("li",[e._v("Call "),a("code",{pre:!0},[e._v("this.props.navigation.push('routeName')")]),e._v(" to add a new route to the navigation stack, and we can call it to navigate to a route multiple times.")])]),a("h2",[e._v("Navigating back to the previous screen")]),a("p",[e._v("3 ways:")]),a("ul",[a("li",[a("code",{pre:!0},[e._v("this.props.navigation.goBack()")])]),a("li",[a("code",{pre:!0},[e._v("this.props.navigation.navigate('routeName')")])]),a("li",[a("code",{pre:!0},[e._v("this.props.navigation.popToTop()")]),e._v("\nOnce a screen is pushed onto the navigation stack, it will remain "),a("strong",[e._v("mounted")]),e._v(" unless it is popped out from the stack.\nReact Navigation emits events to screen components that subscribe to them. There are four different events that you can subscribe to: "),a("code",{pre:!0},[e._v("willFocus")]),e._v(", "),a("code",{pre:!0},[e._v("willBlur")]),e._v(", "),a("code",{pre:!0},[e._v("didFocus")]),e._v(" and "),a("code",{pre:!0},[e._v("didBlur")]),e._v(".")])]),a("h2",[e._v("Passing parameters to a route")]),a("p",[e._v("Syntax: "),a("code",{pre:!0},[e._v("this.props.navigation.navigate('RouteName', { /* params go here */ })")]),e._v("\nTo read the params in the screen component, 2 ways:")]),a("ul",[a("li",[a("code",{pre:!0},[e._v("this.props.navigation.getParam(paramName, defaultValue)")]),e._v(" the default value is the fallback content if no param value is available.")]),a("li",[a("code",{pre:!0},[e._v("this.props.navigation.state.params.xxx")])])]),a("h3",[e._v("Other links")]),a("ul",[a("li",[e._v("Customise headers with the "),a("a",{attrs:{href:"https://reactnavigation.org/docs/en/headers.html"}},[a("code",{pre:!0},[e._v("navigationOptions")]),e._v(" static property")]),e._v(" on the screen components.")])])])}],i=a("2877"),r={},s=Object(i["a"])(r,n,o,!1,null,null,null);t["default"]=s.exports}}]);
//# sourceMappingURL=chunk-2d0d3682.c8b645b7.js.map