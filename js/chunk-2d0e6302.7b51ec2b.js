(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0e6302"],{"984a":function(s,e,r){"use strict";r.r(e);var a=function(){var s=this,e=s.$createElement;s._self._c;return s._m(0)},t=[function(){var s=this,e=s.$createElement,r=s._self._c||e;return r("section",[r("p",[s._v("Reference: "),r("a",{attrs:{href:"https://segmentfault.com/a/1190000012664201"}},[s._v("Promise实现原理（附源码）")]),s._v(" : https://segmentfault.com/a/1190000012664201")]),r("p",[s._v("Note: 此文摘自《Promise实现原理（附源码）》一文，并加以自己的看法")]),r("p",[s._v("在控制台打印一个Promise对象，返回如下结果：")]),r("p",[s._v("成功时: "),r("img",{attrs:{src:"https://cdn1.imggmi.com/uploads/2019/8/23/dce20ebba793abee9cb8c2f5f97abadd-full.png",alt:"resolved"}}),s._v("\n失败时: "),r("img",{attrs:{src:"https://cdn1.imggmi.com/uploads/2019/8/23/7454c730759e9c81336686126017f519-full.png",alt:"rejected"}})]),r("p",[s._v("从图中可以看到，Promise实例返回的对象有"),r("code",{pre:!0},[s._v("[[PromiseStatus]]")]),s._v("和"),r("code",{pre:!0},[s._v("[[PromiseValue]]")]),s._v("两个属性")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" PENDING = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'PENDING'")]),s._v(";\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" FULFILLED = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'FULFILLED'")]),s._v(";\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" REJECTED = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'REJECTED'")]),s._v(";\n\n"),r("span",{pre:!0,attrs:{class:"hljs-class"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("MyPromise")]),s._v(" ")]),s._v("{\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("constructor")]),s._v("(){\n    "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//每个新promise创建时状态都会是PENDING")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status = PENDING;\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._value = "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("null")]),s._v(";\n  }\n}\n")])]),r("p",[s._v("Promise接受一个"),r("em",[s._v("函数")]),s._v("作为参数，该函数接受2个"),r("em",[s._v("函数")]),s._v("参数——"),r("code",{pre:!0},[s._v("resolve")]),s._v("和"),r("code",{pre:!0},[s._v("reject")]),s._v("；")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[r("span",{pre:!0,attrs:{class:"hljs-class"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("MyPromise")]),s._v(" ")]),s._v("{\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("constructor")]),s._v(" (handle){\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("typeof")]),s._v(" handle !== "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'function'")]),s._v("){\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("throw")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Error")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'MyPromise must accept a function as a parameter'")]),s._v(")\n    }\n\n    "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// call the handle when initialising the class")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v("{ \n      "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//resolve和reject函数都可以接受不限类型的参数，作为成功和失败时返回的数据")]),s._v("\n      "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//传入两个函数时不执行，需要用bind绑定正确的this")]),s._v("\n      handle("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._resolve.bind("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("),"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._reject.bind("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("));\n    }"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v(" (err){\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._reject(err);\n    }\n  }\n\n  _resolve(val){\n    "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//当用户在handle中调用时，表明promise状态已更改为成功，同时把用户传入的值作为成功时返回的数据")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status !== PENDING) "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(";\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status = FULFILLED;\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._value = val;\n  }\n\n  _reject(err){\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status !== PENDING) "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(";\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status = REJECTED;\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._value = val;\n  }\n}\n")])]),r("h3",[r("code",{pre:!0},[s._v("then")]),s._v("方法")]),r("p",[s._v("到这里已经实现了Promise的基本结构、状态和值，接下来到核心的"),r("code",{pre:!0},[s._v("then")]),s._v("方法")]),r("p",[r("code",{pre:!0},[s._v("then")]),s._v("方法特性：")]),r("ul",[r("li",[s._v("接受两个参数，"),r("em",[s._v("成功")]),s._v("时调用的函数和"),r("em",[s._v("失败")]),s._v("时调用的函数")]),r("li",[s._v("返回的还是一个promise")]),r("li",[s._v("参数为函数时，函数接受来自Promise实例的成功时/失败时返回的数据，若有返回值，再把返回值传给到下一个"),r("code",{pre:!0},[s._v("then")])]),r("li",[s._v("同一个promise可以多次调用"),r("code",{pre:!0},[s._v("then")]),s._v("，并且调用的顺序按照"),r("code",{pre:!0},[s._v("then")]),s._v("的注册顺序")]),r("li",[r("code",{pre:!0},[s._v("then")]),s._v("的触发条件是上一个的promise状态为fulfilled，i.e. 若Promise实例抛出错误，之后由then中的error function处理后，下一个then中被触发的是"),r("em",[s._v("成功")]),s._v("时调用的函数")])]),r("h4",[s._v("根据"),r("code",{pre:!0},[s._v("then")]),s._v("方法特性作出修改")]),r("ol",[r("li",[r("code",{pre:!0},[s._v("then")]),s._v("接受"),r("em",[s._v("成功")]),s._v("时调用的函数和"),r("em",[s._v("失败")]),s._v("时调用的函数，并在promise状态改变时对应触发他们")]),r("li",[s._v("链式调用"),r("code",{pre:!0},[s._v("then")]),s._v("需返回另一个promise")]),r("li",[s._v("参数为函数时，函数接受来自Promise实例的成功时/失败时返回的数据，若有返回值，再把返回值传给到下一个"),r("code",{pre:!0},[s._v("then")])])]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s._v("  then(onFulfilled,onRejected){\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" {_status, _value} = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(";\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" MyPromise("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("resolve,reject")]),s._v(")")]),s._v("{\n      "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//若_status为FULFILLED")]),s._v("\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" fulfilled = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("value")]),s._v(") =>")]),s._v(" {\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v("{\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" res = onFulfilled(value);\n          resolve(res);\n        }"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v(" (err){\n          reject(err);\n        }\n      }\n      \n      "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//若_status为REJECTED")]),s._v("\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" rejected = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("error")]),s._v(") =>")]),s._v(" {\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v("{\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" res = onRejected(error);\n          resolve(res);\n        }"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v(" (err){\n          reject(err);\n        }\n      }\n\n      "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//根据_status的值执行不同的onFulfilled或onRejected")]),s._v("\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("switch")]),s._v(" (_status) {\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" FULFILLED:\n          fulfilled(_value);\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v(";\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" REJECTED:\n          rejected(_value);\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v(";\n      }\n    })\n  }\n")])]),r("ol",{attrs:{start:"4"}},[r("li",[s._v("同一个promise可以多次调用"),r("code",{pre:!0},[s._v("then")]),s._v("，并且调用的顺序按照"),r("code",{pre:!0},[s._v("then")]),s._v("的注册顺序 ——> 需要有一个记录各个"),r("code",{pre:!0},[s._v("then")]),s._v("的数组，然后依次调用")]),r("li",[s._v("无论是"),r("code",{pre:!0},[s._v("then")]),s._v("还是"),r("code",{pre:!0},[s._v("_resolve")]),s._v("，"),r("code",{pre:!0},[s._v("_reject")]),s._v("，都是采用异步操作")])]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s._v("  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("constructor")]),s._v("(handle){\n    "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ... codes")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//新增两个数组，分别用于记录成功时和失败时调用的数组")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._fulfilledQueues = [];\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._rejectedQueues = [];\n  }\n\n  _resolve(val){\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" run = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("val")]),s._v(") =>")]),s._v(" {\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status !== PENDING) "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(";\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status = FULFILLED;\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._value = val;\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._fulfilledQueues.length > "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(" && "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._fulfilledQueues.shift()){\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._fulfilledQueues.shift()(val)\n      }\n    };\n    "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//设置setTimeout用于异步操作")]),s._v("\n    setTimeout(run, "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(")\n  }\n\n  _reject(val){\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" run = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("val")]),s._v(") =>")]),s._v(" {\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status !== PENDING) "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(";\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status = REJECTED;\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._value = val;\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._rejectedQueues.length > "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(" && "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._rejectedQueues.shift()){\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._rejectedQueues.shift()(val)\n      }\n    };\n    setTimeout(run, "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(")\n  }\n\n  then(onFulfilled,onRejected){\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" {_status, _value} = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(";\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" MyPromise("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("resolve,reject")]),s._v(")")]),s._v("{\n      "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//若_status为FULFILLED")]),s._v("\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" fulfilled = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("value")]),s._v(") =>")]),s._v(" {\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v("{\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" res = onFulfilled(value);\n          "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//此处的resolve函数执行的时候要按then注册的onFulfilled顺序执行，因此在_resolve函数修改↑")]),s._v("\n          resolve(res);\n        }"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v(" (err){\n          reject(err);\n        }\n      }\n      \n      "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//若_status为REJECTED")]),s._v("\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" rejected = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("error")]),s._v(") =>")]),s._v(" {\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v("{\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" res = onRejected(error);\n          resolve(res);\n        }"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v(" (err){\n          reject(err);\n        }\n      }\n\n      "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//根据_status的值执行不同的onFulfilled或onRejected")]),s._v("\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("switch")]),s._v(" (_status) {\n        "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//在PENDING的时候就把then方法分别push到成功时和失败时要执行的函数")]),s._v("\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" PENDING:\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._fulfilledQueues.push(onFulfilled);\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._rejectedQueues.push(onRejected);\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v(";\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" FULFILLED:\n          fulfilled(_value);\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v(";\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" REJECTED:\n          rejected(_value);\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v(";\n      }\n    })\n  }\n")])]),r("p",[s._v("以上的实现是建立在以下假设上的：")]),r("ul",[r("li",[r("code",{pre:!0},[s._v("then")]),s._v("方法的"),r("code",{pre:!0},[s._v("onFulfilled")]),s._v("和"),r("code",{pre:!0},[s._v("onRejected")]),s._v("接受的参数为"),r("strong",[s._v("函数")])])]),r("blockquote",[r("p",[r("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then#Return_value"}},[s._v("MDN Promise.prototype.then()")]),s._v("中表明：若"),r("code",{pre:!0},[s._v("then")]),s._v("接受的参数并不是函数，"),r("code",{pre:!0},[s._v("then")]),s._v("没有了handler但不会报错。当调用"),r("code",{pre:!0},[s._v("then")]),s._v("的promise状态改变后，会返回一个新的Promise实例，而这个promise同样没有handler，只会采用调用"),r("code",{pre:!0},[s._v("then")]),s._v("的原始promise的状态。")])]),r("ul",[r("li",[r("code",{pre:!0},[s._v("then")]),s._v("方法的回调函数返回一个新的Promise实例，则需等待新的promise状态改变后再继续执行回调")]),r("li",[r("code",{pre:!0},[s._v("_resolve")]),s._v("和"),r("code",{pre:!0},[s._v("_reject")]),s._v("接受的参数为"),r("strong",[s._v("非")]),s._v("promise，若参数为另一个promise A，即需等待promise A的状态变化后，再更改此promise的状态")])]),r("ol",[r("li",[s._v("首先处理一下"),r("code",{pre:!0},[s._v("then")]),s._v("的参数并不是函数，以及"),r("code",{pre:!0},[s._v("then")]),s._v("返回一个新的promise的情况：")])]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s._v("  then(onFulfilled,onRejected){\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" { _value, _status } = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(";\n\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" MyPromise("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("resolve, reject")]),s._v(") =>")]),s._v(" {\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" fulfilled = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("value")]),s._v(" =>")]),s._v(" {\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v("{\n          "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//当onFulfilled不是函数时，新的promise的状态和返回值也跟原promise一样")]),s._v("\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("typeof")]),s._v(" onFulfilled !== "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'function'")]),s._v("){\n            resolve(value);\n          }"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v("{\n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" res = onFulfilled(value);\n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(res "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("instanceof")]),s._v(" MyPromise){\n              "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//此处在res代表的新的promise状态改变后再调用then方法，并传入原来的handlers，用新的promise返回的数据再执行一遍then，此时执行的then会走下面else的分支")]),s._v("\n              res.then(resolve,reject)\n            }"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v("{\n              resolve(res);\n            }\n          }\n        } "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v(" (err){\n          reject(err)\n        }\n      };\n\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" rejected = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("error")]),s._v(" =>")]),s._v(" {\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v("{\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("typeof")]),s._v(" onRejected !== "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'function'")]),s._v("){\n            reject(error)\n          }"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v("{\n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" res = onRejected(error);\n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(res "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("instanceof")]),s._v(" MyPromise){\n              res.then(resolve,reject)\n            }"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v("{\n              reject(res);\n            }\n          }\n        } "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v(" (err) {\n          reject(err)\n        }\n      };\n\n      "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// switch stetement codes ")]),s._v("\n    }\n  }\n")])]),r("ol",{attrs:{start:"2"}},[r("li",[s._v("再来处理"),r("code",{pre:!0},[s._v("_resolve")]),s._v("和"),r("code",{pre:!0},[s._v("_reject")]),s._v("接受另一个Promise实例的情况：")])]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s._v("  _resolve(val){\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" run = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("val")]),s._v(") =>")]),s._v(" {\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status !== PENDING) "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(";\n      \n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" runFulfilled = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("val")]),s._v(") =>")]),s._v(" {\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._fulfilledQueues.length > "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(" && "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._fulfilledQueues.shift()){\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._fulfilledQueues.shift()(val)\n        }\n      }\n\n      "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//若传入的val是Promise实例，则等待val的状态发生变化后再执行_resolve")]),s._v("\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(val "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("instanceof")]),s._v(" MyPromise){\n        val.then( "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("value")]),s._v(" =>")]),s._v(" {\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status = FULFILLED;\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._value = value;\n          runFulfilled(value);\n        }, err => {\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status = REJECTED;\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._value = err;\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._rejectedQueues.length > "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(" && "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._rejectedQueues.shift()){\n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._rejectedQueues.shift()(err)\n          }\n        });\n      }"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v("{\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status = FULFILLED;\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._value = val;\n        runFulfilled(val);\n      }\n    };\n    "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//设置setTimeout用于异步操作")]),s._v("\n    setTimeout(run, "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(")\n  };\n\n  _reject(err){\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" run = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("err")]),s._v(") =>")]),s._v(" {\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status !== PENDING) "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(";\n\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" runRejected = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("err")]),s._v(") =>")]),s._v(" {\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._rejectedQueues.length > "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(" && "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._rejectedQueues.shift()){\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._rejectedQueues.shift()(err)\n        }\n      };\n\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status = REJECTED;\n      "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//下面在原文的源码中是没有的，待验证")]),s._v("\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v("(err "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("instanceof")]),s._v(" MyPromise){\n        err.then( "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("val")]),s._v(" =>")]),s._v(" {\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._value = val;\n          runRejected(error);\n        }, error => {\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._value = error;\n          runRejected(error);\n        })\n      }"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v("{\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._value = error;\n        runRejected(error);\n      }\n    };\n    setTimeout(run, "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(")\n  }\n")])]),r("h3",[s._v("相关知识点")]),r("blockquote",[r("p",[s._v("构造方法(constructor method): 用于创建和初始化一个类的对象 "),r("br"),s._v("\n静态方法(static method): 静态方法无需创建实例就可以直接调用，且"),r("strong",[s._v("不能")]),s._v("通过"),r("em",[s._v("实例")]),s._v("调用")])]),r("h2",[s._v("Source code")]),r("pre",{pre:!0},[r("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 判断变量否为function")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" isFunction = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("variable")]),s._v(" =>")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("typeof")]),s._v(" variable === "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'function'")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 定义Promise的三种状态常量")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" PENDING = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'PENDING'")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" FULFILLED = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'FULFILLED'")]),s._v("\n"),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" REJECTED = "),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'REJECTED'")]),s._v("\n\n"),r("span",{pre:!0,attrs:{class:"hljs-class"}},[r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("MyPromise")]),s._v(" ")]),s._v("{\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("constructor")]),s._v(" (handle) { "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// - 构造函数接受一个函数作为参数")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (!isFunction(handle)) {\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("throw")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Error")]),s._v("("),r("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'MyPromise must accept a function as a parameter'")]),s._v(")\n    }\n    "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 添加状态")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status = PENDING\n    "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 添加返回的数据")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._value = "),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 添加成功回调函数队列")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._fulfilledQueues = []\n    "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 添加失败回调函数队列")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._rejectedQueues = []\n    "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 执行handle")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v(" {\n      handle("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._resolve.bind("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("), "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._reject.bind("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(")) \n    } "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v(" (err) {\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._reject(err)\n    }\n  }\n  "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 添加resovle时执行的函数")]),s._v("\n  _resolve (val) {\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" run = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" =>")]),s._v(" {\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status !== PENDING) "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v("\n      "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 依次执行成功队列中的函数，并清空队列")]),s._v("\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" runFulfilled = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("value")]),s._v(") =>")]),s._v(" {\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" cb;\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v(" (cb = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._fulfilledQueues.shift()) {\n          cb(value)\n        }\n      }\n      "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 依次执行失败队列中的函数，并清空队列")]),s._v("\n      "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// - why rejected needs to be run?")]),s._v("\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" runRejected = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("error")]),s._v(") =>")]),s._v(" {\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" cb;\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v(" (cb = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._rejectedQueues.shift()) {\n          cb(error)\n        }\n      }\n      "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/* 如果resolve的参数为Promise对象，则必须等待该Promise对象状态改变后,\n        当前Promsie的状态才会改变，且状态取决于参数Promsie对象的状态\n      */")]),s._v("\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (val "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("instanceof")]),s._v(" MyPromise) {\n        val.then("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("value")]),s._v(" =>")]),s._v(" {\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._value = value\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status = FULFILLED\n          runFulfilled(value)\n        }, err => {\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._value = err\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status = REJECTED\n          runRejected(err)\n        })\n      } "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._value = val\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status = FULFILLED\n        runFulfilled(val)\n      }\n    }\n    "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 为了支持同步的Promise，这里采用异步调用")]),s._v("\n    setTimeout(run, "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(")\n  }\n  "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 添加reject时执行的函数")]),s._v("\n  _reject (err) { \n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" ("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status !== PENDING) "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 依次执行失败队列中的函数，并清空队列")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" run = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" =>")]),s._v(" {\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._status = REJECTED\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._value = err\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" cb;\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("while")]),s._v(" (cb = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._rejectedQueues.shift()) {\n        cb(err)\n      }\n    }\n    "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 为了支持同步的Promise，这里采用异步调用")]),s._v("\n    setTimeout(run, "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(")\n  }\n  "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 添加then方法")]),s._v("\n  then (onFulfilled, onRejected) {\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("const")]),s._v(" { _value, _status } = "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 返回一个新的Promise对象")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" MyPromise("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("onFulfilledNext, onRejectedNext")]),s._v(") =>")]),s._v(" { "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// - onFulfilledNext === resolve")]),s._v("\n      "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 封装一个成功时执行的函数")]),s._v("\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" fulfilled = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("value")]),s._v(" =>")]),s._v(" {\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v(" {\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (!isFunction(onFulfilled)) {\n            onFulfilledNext(value)\n          } "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" res =  onFulfilled(value); \n            "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (res "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("instanceof")]),s._v(" MyPromise) {\n              "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 如果当前回调函数返回MyPromise对象，必须等待其状态改变后在执行下一个回调")]),s._v("\n              res.then(onFulfilledNext, onRejectedNext)\n            } "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n              "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//否则会将返回结果直接作为参数，传入下一个then的回调函数，并立即执行下一个then的回调函数")]),s._v("\n              onFulfilledNext(res)\n            }\n          }\n        } "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v(" (err) {\n          "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 如果函数执行出错，新的Promise对象的状态为失败")]),s._v("\n          onRejectedNext(err)\n        }\n      }\n      "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 封装一个失败时执行的函数")]),s._v("\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" rejected = "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("error")]),s._v(" =>")]),s._v(" {\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("try")]),s._v(" {\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (!isFunction(onRejected)) {\n            onRejectedNext(error)\n          } "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n              "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" res = onRejected(error);\n              "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (res "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("instanceof")]),s._v(" MyPromise) {\n                "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 如果当前回调函数返回MyPromise对象，必须等待其状态改变后在执行下一个回调")]),s._v("\n                res.then(onFulfilledNext, onRejectedNext)\n              } "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("else")]),s._v(" {\n                "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//否则会将返回结果直接作为参数，传入下一个then的回调函数，并立即执行下一个then的回调函数")]),s._v("\n                onFulfilledNext(res)\n              }\n          }\n        } "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v(" (err) {\n          "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 如果函数执行出错，新的Promise对象的状态为失败")]),s._v("\n          onRejectedNext(err)\n        }\n      }\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("switch")]),s._v(" (_status) {\n        "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 当状态为pending时，将then方法回调函数加入执行队列等待执行")]),s._v("\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" PENDING:\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._fulfilledQueues.push(fulfilled)\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v("._rejectedQueues.push(rejected)\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v("\n        "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 当状态已经改变时，立即执行对应的回调函数")]),s._v("\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" FULFILLED:\n          fulfilled(_value)\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v("\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("case")]),s._v(" REJECTED:\n          rejected(_value)\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("break")]),s._v("\n      }\n    })\n  }\n  "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 添加catch方法")]),s._v("\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("catch")]),s._v(" (onRejected) {\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".then("),r("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("undefined")]),s._v(", onRejected)\n  }\n\n  "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 添加静态resolve方法")]),s._v("\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" resolve (value) {\n    "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 如果参数是MyPromise实例，直接返回这个实例")]),s._v("\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (value "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("instanceof")]),s._v(" MyPromise) "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" value\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" MyPromise("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("resolve")]),s._v(" =>")]),s._v(" resolve(value))\n  }\n  "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 添加静态reject方法")]),s._v("\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" reject (value) {\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" MyPromise("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("resolve ,reject")]),s._v(") =>")]),s._v(" reject(value))\n  }\n  "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 添加静态all方法")]),s._v("\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" all (list) {\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" MyPromise("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("resolve, reject")]),s._v(") =>")]),s._v(" {\n      "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("/**\n       * 返回值的集合\n       */")]),s._v("\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" values = []\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" count = "),r("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v("\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" [i, p] "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" list.entries()) {\n        "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 数组参数如果不是MyPromise实例，先调用MyPromise.resolve")]),s._v("\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".resolve(p).then("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("res")]),s._v(" =>")]),s._v(" {\n          values[i] = res\n          count++\n          "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 所有状态都变成fulfilled时返回的MyPromise状态就变成fulfilled")]),s._v("\n          "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (count === list.length) resolve(values)\n        }, err => {\n          "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 有一个被rejected时返回的MyPromise状态就变成rejected")]),s._v("\n          reject(err)\n        })\n      }\n    })\n  }\n  "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 添加静态race方法")]),s._v("\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" race (list) {\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" MyPromise("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[s._v("("),r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("resolve, reject")]),s._v(") =>")]),s._v(" {\n      "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("for")]),s._v(" ("),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" p "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("of")]),s._v(" list) {\n        "),r("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 只要有一个实例率先改变状态，新的MyPromise的状态就跟着改变")]),s._v("\n        "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".resolve(p).then("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("res")]),s._v(" =>")]),s._v(" {\n          resolve(res)\n        }, err => {\n          reject(err)\n        })\n      }\n    })\n  }\n  "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("finally")]),s._v(" (cb) {\n    "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".then(\n      "),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("value")]),s._v("  =>")]),s._v(" MyPromise.resolve(cb()).then("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" =>")]),s._v(" value),\n      reason => MyPromise.resolve(cb()).then("),r("span",{pre:!0,attrs:{class:"hljs-function"}},[r("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("()")]),s._v(" =>")]),s._v(" { "),r("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("throw")]),s._v(" reason })\n    );\n  }\n}\n")])])])}],n=r("2877"),l={},v=Object(n["a"])(l,a,t,!1,null,null,null);e["default"]=v.exports}}]);
//# sourceMappingURL=chunk-2d0e6302.7b51ec2b.js.map