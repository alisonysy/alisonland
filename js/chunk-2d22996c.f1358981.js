(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d22996c"],{dda7:function(s,e,t){"use strict";t.r(e);var r=function(){var s=this,e=s.$createElement;s._self._c;return s._m(0)},a=[function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("section",[t("p",[t("code",{pre:!0},[s._v("class User{...}")]),s._v("实际上做了2件事：")]),t("ol",[t("li",[s._v("创建一个名为"),t("code",{pre:!0},[s._v("User")]),s._v("的函数，作为类声明的结果。函数体就是类里"),t("code",{pre:!0},[s._v("constructor")]),s._v("的方法")]),t("li",[s._v("把类的方法，保存在"),t("code",{pre:!0},[s._v("User.prototype")]),s._v("里")])]),t("p",[s._v("使用类和函数创建构造函数的区别：")]),t("ol",[t("li",[s._v("由"),t("code",{pre:!0},[s._v("class")]),s._v("创建的函数有一个特殊的内部属性"),t("code",{pre:!0},[s._v('[[FunctionKind]]:"classConstructor"')]),s._v("，使用的时候必须通过"),t("code",{pre:!0},[s._v("new")]),s._v("调用，否则会报错")]),t("li",[s._v("类方法是不能枚举的，但函数原型上的方法可以通过"),t("code",{pre:!0},[s._v("for...in")]),s._v("枚举")])]),t("h2",[t("code",{pre:!0},[s._v("extends")]),s._v("关键词")]),t("p",[s._v("使用"),t("code",{pre:!0},[s._v("extends")]),s._v("让一个类A继承另一个类B，类A的"),t("code",{pre:!0},[s._v("prototype")]),s._v("属性的原型是类B，即"),t("code",{pre:!0},[s._v("A.prototype.[[Prototype]]")]),s._v("等于"),t("code",{pre:!0},[s._v("B.prototype")]),s._v("，即当在"),t("code",{pre:!0},[s._v("A.prototype")]),s._v("上找补到方法的时候，会从"),t("code",{pre:!0},[s._v("B.prototype")]),s._v("上找。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s._v("B["),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("constructor")]),s._v("] ->(prototype) B.prototype["),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("constructor")]),s._v(":B;method1:function;method2:function...]\n    | [[Prototype]]               | [[Prototype]]\nA["),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("constructor")]),s._v("] ->(prototype) B.prototpe["),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("constructor")]),s._v(":A;method3:function]\n                                  | [[Prototype]]\n                              new A[params]\n")])]),t("p",[s._v("注："),t("code",{pre:!0},[s._v("A extends B")]),s._v("会有两处"),t("code",{pre:!0},[s._v("[[Prototype]]")]),s._v("的引用创建，1处是"),t("code",{pre:!0},[s._v("A")]),s._v("函数继承"),t("code",{pre:!0},[s._v("B")]),s._v("函数，体现在"),t("code",{pre:!0},[s._v("B")]),s._v("类的静态方法可在"),t("code",{pre:!0},[s._v("A")]),s._v("上获取，2处是"),t("code",{pre:!0},[s._v("A.prototype")]),s._v("继承"),t("code",{pre:!0},[s._v("B.prototype")]),s._v("，体现在由"),t("code",{pre:!0},[s._v("A")]),s._v("创建的实例可以使用"),t("code",{pre:!0},[s._v("B")]),s._v("的实例方法。")]),t("h3",[t("code",{pre:!0},[s._v("super")]),s._v("关键词")]),t("ol",[t("li",[t("code",{pre:!0},[s._v("super.method(...args)")]),s._v("调用父类的方法")]),t("li",[t("code",{pre:!0},[s._v("super(...args)")]),s._v("只能在"),t("code",{pre:!0},[s._v("constructor")]),s._v("里调用，调用父类的"),t("code",{pre:!0},[s._v("constructor")])])]),t("p",[s._v("注：和"),t("code",{pre:!0},[s._v("this")]),s._v("一样，在箭头函数里没有"),t("code",{pre:!0},[s._v("super")]),s._v("，所以在类的方法中使用"),t("code",{pre:!0},[s._v("setTimeout(()=> super.method(), delay)")]),s._v("可以正常调用父类的方法，但若使用"),t("code",{pre:!0},[s._v("setTimeout(function(){super.method()},delay)")]),s._v("将会报错－"),t("em",[s._v("unexpected super")])]),t("h2",[s._v("类的静态方法和静态属性")]),t("p",[s._v("静态方法用于应用于整个类的功能，而不针对某一个实例，如"),t("em",[s._v("对比两个实例")]),s._v("，有别于正常创建实例的"),t("em",[s._v("工厂函数")]),s._v("；同理，静态属性用于储存应用于整个类的数据。\n继承父类的子类也能继承静态方法，如"),t("code",{pre:!0},[s._v("A extends B")]),s._v("可通过"),t("code",{pre:!0},[s._v("A.staticMethod")]),s._v("获取"),t("code",{pre:!0},[s._v("B.staticMethod")]),s._v("。")]),t("h3",[s._v("继承built-in class")]),t("p",[s._v("在继承内置类时，若内置的被继承的方法返回新对象，内部执行会以"),t("strong",[s._v("子类")]),s._v("的"),t("code",{pre:!0},[s._v("constructor")]),s._v("创建该对象，因此新返回的对象仍然是子类的实例，可以使用子类的方法。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[t("span",{pre:!0,attrs:{class:"hljs-class"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Array1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Array")])]),s._v("{\n    isEmpty(){\n        "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".length === "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("0")]),s._v(";\n    }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" arr1Inst = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Array1("),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(","),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("3")]),s._v(","),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("5")]),s._v(","),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v(","),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("12")]),s._v(");\narr1Inst.isEmpty(); "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// false -> arr1Inst.constructor === Array1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" filteredArr1Inst = arr1Inst.filter("),t("span",{pre:!0,attrs:{class:"hljs-function"}},[t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("i")]),s._v(" =>")]),s._v(" i > "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v(");\n"),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(filteredArr1Inst); "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 12")]),s._v("\nfilteredArr1Inst.isEmpty(); "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// false -> method 'isEmpty()' still works since the returned filteredArr1Inst is still an instance of Array1")]),s._v("\n")])]),t("ul",[t("li",[s._v("通过静态getter "),t("code",{pre:!0},[s._v("Symbol.species")]),s._v("改变返回的新对象。在子类中设置"),t("code",{pre:!0},[s._v("Symbol.species")]),s._v("静态方法，它返回的对象将被用于内置方法中创建新对象时的"),t("em",[s._v("构造原型")]),s._v("。")])]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[t("span",{pre:!0,attrs:{class:"hljs-class"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Array1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Array")])]),s._v("{\n    isEmpty(){...}\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// built-in methods will use this as the constructor")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("get")]),s._v(" [Symbol.species](){\n        "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Array")]),s._v(";\n    }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" arr1Inst_1 = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Array1("),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("2")]),s._v(","),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("1")]),s._v(","),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("4")]),s._v(","),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("45")]),s._v(");\narr1Inst_1.isEmpty(); "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// false -> arr1Inst_1.constructor === Array1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" filteredArr1Inst_1 = arr1Inst_1.filter( "),t("span",{pre:!0,attrs:{class:"hljs-function"}},[t("span",{pre:!0,attrs:{class:"hljs-params"}},[s._v("i")]),s._v(" =>")]),s._v(" i > "),t("span",{pre:!0,attrs:{class:"hljs-number"}},[s._v("10")]),s._v(");\nfilteredArr1Inst_1.isEmpty(); "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Error: filteredArr1Inst_1.isEmpty is not a function")]),s._v("\n")])]),t("ul",[t("li",[s._v("内置类中不能继承"),t("strong",[s._v("静态方法")]),s._v("。如"),t("code",{pre:!0},[s._v("Array")]),s._v("和"),t("code",{pre:!0},[s._v("Date")]),s._v("都继承自"),t("code",{pre:!0},[s._v("Object")]),s._v("，他们的实例都拥有"),t("code",{pre:!0},[s._v("Object.prototype")]),s._v("的方法，但"),t("code",{pre:!0},[s._v("Array.[[Prototype]]")]),s._v("没有引用"),t("code",{pre:!0},[s._v("Object")]),s._v("，因此没有"),t("code",{pre:!0},[s._v("Array.keys()")]),s._v("等静态方法。")])]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Object")]),s._v("[defineProperty, keys] ->(prototype) "),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Object")]),s._v(".prototype["),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("constructor")]),s._v(":Object;toString:function;hasOwnProperty:function]\n                                                    | [[Prototype]]\nDate[now, parse] ->(prototype) Date.prototype["),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("constructor")]),s._v(":Date;toString:function;getDate:function]\n                                                    | [[Prototype]]\n                                                new Date()\n")])]),t("h3",[s._v("类检查"),t("code",{pre:!0},[s._v("instanceof")])]),t("p",[t("code",{pre:!0},[s._v("instanceof")]),s._v("检查实例的原型链上是否有对应的类。也可以通过"),t("code",{pre:!0},[s._v("Symbol.hasInstance")]),s._v("来定制相关的逻辑。\n"),t("code",{pre:!0},[s._v("obj instanceof Class")]),s._v("的内在逻辑是：")]),t("ol",[t("li",[s._v("如果类有静态方法"),t("code",{pre:!0},[s._v("Symbol.hasInstance")]),s._v("，就会调用"),t("code",{pre:!0},[s._v("Class[Symbol.hasInstance](obj)")]),s._v("，此方法应该返回true/false")])]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[t("span",{pre:!0,attrs:{class:"hljs-class"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Animal")]),s._v(" ")]),s._v("{\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("static")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".hasInstance](obj) {\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// if an object has a 'canEat' method, it IS an instance of Class Animal")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("if")]),s._v(" (obj.canEat) "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("return")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-literal"}},[s._v("true")]),s._v(";\n  }\n}\n")])]),t("ol",{attrs:{start:"2"}},[t("li",[s._v("大多数的类没有"),t("code",{pre:!0},[s._v("Symbol.hasInstance")]),s._v("方法，此时会去检查"),t("code",{pre:!0},[s._v("Class.prototype")]),s._v("是否出现在"),t("code",{pre:!0},[s._v("obj")]),s._v("的原型链上")])]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s._v("obj.__proto__ === Class.prototype?\nobj.__proto__.__proto__ === Class.prototype?\nobj.__proto__.__proto__.__proto__ === Class.prototype?\n...\n")])]),t("p",[s._v("注：")]),t("ul",[t("li",[t("code",{pre:!0},[s._v("Class.prototype.isPrototypeOf(obj)")]),s._v("和"),t("code",{pre:!0},[s._v("obj instanceof Class")]),s._v("用法相同")]),t("li",[t("code",{pre:!0},[s._v("Class")]),s._v("的constructor不参与类检查的过程，只有"),t("code",{pre:!0},[s._v("Class.prototype")]),s._v("起作用")])]),t("h3",[s._v("类和"),t("code",{pre:!0},[s._v("toString")])]),t("p",[t("code",{pre:!0},[s._v("Object.prototype.toString.call(xx)")]),s._v("常用于检查某对象的构造类型，通过返回"),t("code",{pre:!0},[s._v("[object Object/Function...]")]),s._v("等得到xx的构造函数名字。而"),t("code",{pre:!0},[s._v("Symbol.toStringTag")]),s._v("则可用于定制"),t("code",{pre:!0},[s._v("toString")]),s._v("的返回值。")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// set on individual object")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" user = {\n    ["),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".toStringTag]:"),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"User"')]),s._v("\n};\n"),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Object")]),s._v(".prototype.toString.call(user);"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// [object User]")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// set on class prototype")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-class"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("Animal")]),s._v(" ")]),s._v("{}\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" rabbit = "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" Animal();\n"),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Object")]),s._v(".prototype.toString.call(rabbit);"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// [object Object]")]),s._v("\n\nAnimal.prototype["),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Symbol")]),s._v(".toStringTag] = "),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Animal"')]),s._v(";\n"),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Object")]),s._v(".prototype.toString.call(rabbit);"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// [object Animal]")]),s._v("\n")])]),t("h2",[s._v("Mixins")]),t("p",[s._v("在JS中，类只能继承"),t("em",[s._v("一个")]),s._v("类/对象，"),t("code",{pre:!0},[s._v("mixin")]),s._v("可以让类/对象拥有其他对象的方法，而无需继承其他对象。\n实际上，"),t("code",{pre:!0},[s._v("mixin")]),s._v("通过拷贝方法，把对象的方法拷贝到另一个对象/类上，如"),t("code",{pre:!0},[s._v("Object.assign(User.prototype,sayHiMixin)")]),s._v("，即在"),t("code",{pre:!0},[s._v("User.prototype")]),s._v("上得到从"),t("code",{pre:!0},[s._v("sayHiMixin")]),s._v("上拷贝的方法。")]),t("p",[t("code",{pre:!0},[s._v("mixin")]),s._v("也能继承自另一个"),t("code",{pre:!0},[s._v("mixin")]),s._v("，如：")]),t("pre",{pre:!0},[t("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" sayMixin = {\n  say(phrase) {\n    alert(phrase);\n  }\n};\n\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" sayHiMixin = {\n  "),t("span",{pre:!0,attrs:{class:"hljs-attr"}},[s._v("__proto__")]),s._v(": sayMixin, "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// (or we could use Object.create to set the prototype here)")]),s._v("\n\n  sayHi() {\n    "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// call parent method")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("super")]),s._v(".say("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("`Hello "),t("span",{pre:!0,attrs:{class:"hljs-subst"}},[s._v("${"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name}")]),s._v("`")]),s._v("); "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// 'super' here calls the method in the prototype of the mixin, i.e. sayMixin, not the prototype of the class")]),s._v("\n  },\n  sayBye() {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("super")]),s._v(".say("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("`Bye "),t("span",{pre:!0,attrs:{class:"hljs-subst"}},[s._v("${"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name}")]),s._v("`")]),s._v("); "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// ")]),s._v("\n  }\n};\n\n"),t("span",{pre:!0,attrs:{class:"hljs-class"}},[t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("User")]),s._v(" ")]),s._v("{\n  "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("constructor")]),s._v("(name) {\n    "),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("this")]),s._v(".name = name;\n  }\n}\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// copy the methods")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("Object")]),s._v(".assign(User.prototype, sayHiMixin);\n\n"),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// now User can say hi")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("new")]),s._v(" User("),t("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v('"Dude"')]),s._v(").sayHi(); "),t("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// Hello Dude!")]),s._v("\n")])])])}],p=t("2877"),n={},_=Object(p["a"])(n,r,a,!1,null,null,null);e["default"]=_.exports}}]);
//# sourceMappingURL=chunk-2d22996c.f1358981.js.map