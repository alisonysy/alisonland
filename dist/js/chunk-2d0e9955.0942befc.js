(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0e9955"],{"8dc6":function(s,e,n){"use strict";n.r(e);var t=function(){var s=this,e=s.$createElement;s._self._c;return s._m(0)},r=[function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("section",[n("p",[s._v("ES6提出了let和constant，以及代码块，在代码块里声明的变量只能在代码块里获得，在同一个代码块或全局下重复声明会报错。")]),n("pre",{pre:!0},[n("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[s._v("{\n  "),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" msg = "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'message'")]),s._v(";\n  "),n("span",{pre:!0,attrs:{class:"hljs-function"}},[n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("function")]),s._v(" "),n("span",{pre:!0,attrs:{class:"hljs-title"}},[s._v("say")]),s._v("("),n("span",{pre:!0,attrs:{class:"hljs-params"}}),s._v(")")]),s._v("{"),n("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log("),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'Hi'")]),s._v(");}\n}\n"),n("span",{pre:!0,attrs:{class:"hljs-built_in"}},[s._v("console")]),s._v(".log(msg); "),n("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// msg is not defined")]),s._v("\nsay(); "),n("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// it executes!!")]),s._v("\n")])]),n("p",[s._v("对于if，for，while等，创建在{...}的变量只能在代码块里获取。")]),n("h2",[s._v("词法环境 Lexical environment")]),n("h3",[s._v("1. 变量")]),n("p",[s._v("在JS中，每次函数被调用，代码块和里面的脚本会生成一个隐藏的内置的对象——词法环境"),n("strong",[s._v("Lexical Environment")]),s._v("。\n这个词法环境对象包含2部分：")]),n("ul",[n("li",[s._v("Environment Record —— 一个把所有"),n("em",[s._v("本地变量")]),s._v("储存为"),n("strong",[s._v("属性")]),s._v("的对象，该对象还包含其他信息如"),n("code",{pre:!0},[s._v("this")])]),n("li",[s._v("指向外部的词法环境outer lexical environment")])]),n("blockquote",[n("p",[s._v("一个变量只是Environment Record这个特殊内部对象的属性，“获取或改变一个变量”意味着“获取或改变该对象的属性”")])]),n("p",[s._v("在全局中，外部的词法环境为"),n("code",{pre:!0},[s._v("null")]),s._v("。\n词法环境对象变化过程：")]),n("pre",{pre:!0},[n("code",{pre:!0,attrs:{"v-pre":"",class:"language-js"}},[n("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// execution starts [phrase: <uninitialised>] (outer -> null)")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"hljs-keyword"}},[s._v("let")]),s._v(" phrase; "),n("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// [phrase:undefined]")]),s._v("\nphrase = "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'hello'")]),s._v("; "),n("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("// [phrase:'hello']")]),s._v("\nphrase = "),n("span",{pre:!0,attrs:{class:"hljs-string"}},[s._v("'bye'")]),s._v("; "),n("span",{pre:!0,attrs:{class:"hljs-comment"}},[s._v("//[phrase:'bye']")]),s._v("\n")])]),n("ol",[n("li",[s._v("当脚本开始，词法环境对象会预先记录下所有声明的变量，最开始时，他们属于“未初始化”阶段。这是一个特殊的内部状态，引擎知道这些变量的存在但不让他们在"),n("code",{pre:!0},[s._v("let")]),s._v("声明前被使用。")]),n("li",[s._v("当变量phrase的声明出现，但未赋值时，值为"),n("code",{pre:!0},[s._v("undefined")]),s._v("。")]),n("li",[s._v("phrase被赋值")]),n("li",[s._v("phrase的值被改变")])])])}],a=n("2877"),l={},v=Object(a["a"])(l,t,r,!1,null,null,null);e["default"]=v.exports}}]);
//# sourceMappingURL=chunk-2d0e9955.0942befc.js.map