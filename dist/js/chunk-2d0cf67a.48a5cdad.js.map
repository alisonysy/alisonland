{"version":3,"sources":["webpack:///./src/blog_md/210819-binary-tree-traversal.md?fab6","webpack:///./src/blog_md/210819-binary-tree-traversal.md"],"names":["render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","pre","attrs","v-pre","class","script","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d0cf67a.48a5cdad.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('p',[_vm._v(\"举一个二叉树的栗子：\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\"}},[_vm._v(\"                20\\n          /           \\\\\\n        10            23\\n      /   \\\\          /  \\\\\\n     8    15       21    76\\n      \\\\    / \\\\       \\\\   / \\n      9  14  17     22  42\\n             /         /  \\\\\\n            16        33  56\\n\")])]),_c('p',[_vm._v(\"写成JS的对象即为：\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-js\"}},[_vm._v(\"root = {\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'left'\")]),_vm._v(\": {\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'left'\")]),_vm._v(\": {\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'right'\")]),_vm._v(\": {\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'val'\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"9\")]),_vm._v(\"\\n      },\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'val'\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"8\")]),_vm._v(\"\\n    },\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'right'\")]),_vm._v(\": {\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'left'\")]),_vm._v(\": {\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'val'\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"14\")]),_vm._v(\"\\n      },\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'right'\")]),_vm._v(\": {\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'left'\")]),_vm._v(\": {\\n          \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'val'\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"16\")]),_vm._v(\"\\n        }, \\n        \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'val'\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"17\")]),_vm._v(\"\\n      }, \\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'val'\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"15\")]),_vm._v(\"\\n    }, \\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'val'\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"10\")]),_vm._v(\"\\n  },\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'right'\")]),_vm._v(\": {\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'left'\")]),_vm._v(\": {\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'right'\")]),_vm._v(\": {\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'val'\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"22\")]),_vm._v(\"\\n      },\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'val'\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"21\")]),_vm._v(\"\\n    },\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'right'\")]),_vm._v(\": {\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'left'\")]),_vm._v(\": {\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'left'\")]),_vm._v(\": {\\n          \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'val'\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"33\")]),_vm._v(\"\\n        },\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'right'\")]),_vm._v(\": {\\n          \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'val'\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"56\")]),_vm._v(\"\\n        },\\n        \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'val'\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"42\")]),_vm._v(\"\\n      },\\n      \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'val'\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"76\")]),_vm._v(\"\\n    }, \\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'val'\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"23\")]),_vm._v(\"\\n  }, \\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-string\"}},[_vm._v(\"'val'\")]),_vm._v(\": \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"20\")]),_vm._v(\"\\n}\\n\")])]),_c('p',[_vm._v(\"二叉树的遍历用\"),_c('em',[_vm._v(\"递归\")]),_vm._v(\"实现的代码简单易懂，但递归性能消耗大；\"),_c('em',[_vm._v(\"非递归\")]),_vm._v(\"实现中，运用到\"),_c('strong',[_vm._v(\"栈\")]),_vm._v(\"的概念\")]),_c('h2',[_vm._v(\"二叉树的前序遍历\")]),_c('p',[_vm._v(\"所谓前序遍历(pre-order traversal)，即\"),_c('em',[_vm._v(\"从该节点开始，遍历左子节点，再到右子节点\")])]),_c('h3',[_vm._v(\"递归实现\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-js\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"var\")]),_vm._v(\" preorderTraversal = \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"root, array = []\")]),_vm._v(\") \")]),_vm._v(\"{\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"if\")]),_vm._v(\" (root) {\\n    array.push(root.val);\\n    preorderTraversal(root.left, array);\\n    preorderTraversal(root.right, array);\\n  }\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" array;\\n};\\n\")])]),_c('h3',[_vm._v(\"非递归实现\")]),_c('ol',[_c('li',[_vm._v(\"遇到节点即访问当前节点，把当前节点的值push到最后结果的数组中；\")]),_c('li',[_vm._v(\"再把所有左子树入栈，直至左子树为空；\")]),_c('li',[_vm._v(\"此时当前节点为\"),_c('code',{pre:true},[_vm._v(\"undefined\")]),_vm._v(\"/\"),_c('code',{pre:true},[_vm._v(\"null\")]),_vm._v(\"的左子树a，当前栈中最后一个元素是当前\"),_c('code',{pre:true},[_vm._v(\"undefined\")]),_vm._v(\"的左子树的父节点b。出栈后，令当前节点为父节点b(可能有，也可能没有右子树)，此时栈中最后一个元素该\"),_c('strong',[_vm._v(\"父节点的父节点\")]),_vm._v(\"d；\")]),_c('li',[_vm._v(\"此时已遍历父节点b的左子树和自身，应该到b的右子树c；\")]),_c('li',[_vm._v(\"此时右子树c为目标节点，重复\"),_c('code',{pre:true},[_vm._v(\"1, 2, 3, 4\")])])]),_c('p',[_vm._v(\"Note: 需要在访问完左子树后，在访问右子树\"),_c('strong',[_vm._v(\"前\")]),_vm._v(\"，把即将访问的右子树的所在节点\"),_c('strong',[_vm._v(\"出栈\")]),_vm._v(\"，否则将陷入无限循环访问右子树\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-js\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"var\")]),_vm._v(\" preorderTraversal = \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"root\")]),_vm._v(\") \")]),_vm._v(\"{\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"const\")]),_vm._v(\" result = [];\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"const\")]),_vm._v(\" stack = [];\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"let\")]),_vm._v(\" current = root;\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"while\")]),_vm._v(\" (current || stack.length > \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"0\")]),_vm._v(\") {\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"while\")]),_vm._v(\" (current) {\\n      result.push(current.val);\\n      stack.push(current);\\n      current = current.left;\\n    }\\n    current = stack.pop();\\n    current = current.right;\\n  }\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" result;\\n};\\n\")])]),_c('h2',[_vm._v(\"二叉树的中序遍历\")]),_c('p',[_vm._v(\"中序遍历(in-order traversal)，指\"),_c('em',[_vm._v(\"先遍历左子节点，再到自身(中间)，再到右子节点\")])]),_c('h3',[_vm._v(\"递归实现\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-js\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"var\")]),_vm._v(\" inorderTraversal = \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"root, array = []\")]),_vm._v(\") \")]),_vm._v(\"{\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"if\")]),_vm._v(\" (root) {\\n    inorderTraversal(root.left, array);\\n    array.push(root.val);\\n    inorderTraversal(root.right, array);\\n  }\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" array;\\n};\\n\")])]),_c('h3',[_vm._v(\"非递归实现\")]),_c('ol',[_c('li',[_vm._v(\"左子树入栈，直至左子树为空；\")]),_c('li',[_vm._v(\"此时当前节点为\"),_c('code',{pre:true},[_vm._v(\"undefined\")]),_vm._v(\"/\"),_c('code',{pre:true},[_vm._v(\"null\")]),_vm._v(\"的左子树a，当前栈中最后一个元素是当前\"),_c('code',{pre:true},[_vm._v(\"undefined\")]),_vm._v(\"的左子树的父节点b。出栈后，令当前节点为父节点b(可能有，也可能没有右子树)，此时栈中最后一个元素该\"),_c('strong',[_vm._v(\"父节点的父节点\")]),_vm._v(\"d；\")]),_c('li',[_vm._v(\"当确定没有左子树后，访问该节点b，把节点的值添加进最后结果的数组中；\")]),_c('li',[_vm._v(\"此时已遍历父节点b的左子树和自身，应该到b的右子树c；\")]),_c('li',[_vm._v(\"此时右子树c为目标节点，重复\"),_c('code',{pre:true},[_vm._v(\"1, 2, 3, 4\")])])]),_c('p',[_vm._v(\"Note: 需要在访问完左子树后，在访问右子树\"),_c('strong',[_vm._v(\"前\")]),_vm._v(\"，把即将访问的右子树的所在节点\"),_c('strong',[_vm._v(\"出栈\")]),_vm._v(\"，否则将陷入无限循环访问右子树\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-js\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"var\")]),_vm._v(\" inorderTraversal = \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"root\")]),_vm._v(\") \")]),_vm._v(\"{\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"const\")]),_vm._v(\" result = [];\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"const\")]),_vm._v(\" stack = [];\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"let\")]),_vm._v(\" current = root;\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"while\")]),_vm._v(\" (current || stack.length > \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"0\")]),_vm._v(\") {\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"while\")]),_vm._v(\" (current) {\\n      stack.push(current);\\n      current = current.left;\\n    }\\n    current = stack.pop();\\n    result.push(current.val);\\n    current = current.right;\\n  }\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" result;\\n};\\n\")])]),_c('h2',[_vm._v(\"二叉树的后序遍历\")]),_c('p',[_vm._v(\"所谓后序遍历(post-order traversal)，即\"),_c('em',[_vm._v(\"先遍历左子节点，再到右子节点，再到自身(中间)\")])]),_c('h3',[_vm._v(\"递归实现\")]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-js\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"var\")]),_vm._v(\" postorderTraversal = \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"root, array = []\")]),_vm._v(\") \")]),_vm._v(\"{\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"if\")]),_vm._v(\" (root) {\\n    postorderTraversal(root.left, array);\\n    postorderTraversal(root.right, array);\\n    array.push(root.val);\\n  }\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" array;\\n};\\n\")])]),_c('h3',[_vm._v(\"非递归实现\")]),_c('ol',[_c('li',[_vm._v(\"左子树入栈，直至左子树为空；\")]),_c('li',[_vm._v(\"此时当前节点为\"),_c('code',{pre:true},[_vm._v(\"undefined\")]),_vm._v(\"/\"),_c('code',{pre:true},[_vm._v(\"null\")]),_vm._v(\"的左子树a，当前栈中最后一个元素是当前\"),_c('code',{pre:true},[_vm._v(\"undefined\")]),_vm._v(\"的左子树的父节点b，此时暂不出栈，但通过\"),_c('code',{pre:true},[_vm._v(\"stack[stack.length - 1]\")]),_vm._v(\"获取与\"),_c('code',{pre:true},[_vm._v(\"stack.pop()\")]),_vm._v(\"相同的元素，即栈的\"),_c('em',[_vm._v(\"最后一个\")]),_vm._v(\"元素；\")]),_c('li',[_vm._v(\"目前为止，虽然访问了左子树，但未将左子树的值放入结果数组中；此时，访问右子树，在确定\"),_c('strong',[_vm._v(\"没有\")]),_vm._v(\"右子树或右子树\"),_c('strong',[_vm._v(\"已经访问过\")]),_vm._v(\"后，才把父节点b出栈，同时访问b，把b的值push到结果数组中，并\"),_c('strong',[_vm._v(\"标记\")]),_vm._v(\"b已经访问过；\")]),_c('li',[_vm._v(\"因为b已经\"),_c('em',[_vm._v(\"被访问过\")]),_vm._v(\"，而此时的栈最后一个元素是b的父节点，此时需要访问b的父节点的\"),_c('em',[_vm._v(\"右子节点\")]),_vm._v(\"。b作为其父节点的\"),_c('em',[_vm._v(\"左子节点\")]),_vm._v(\"，无需再访问，因此把\"),_c('code',{pre:true},[_vm._v(\"current = null\")]),_vm._v(\"，避免再进入\"),_c('code',{pre:true},[_vm._v(\"while\")]),_vm._v(\"循环；\")]),_c('li',[_vm._v(\"取栈中最后一个元素作为当前节点，判断其有否右子节点，若有，继续\"),_c('code',{pre:true},[_vm._v(\"1, 2, 3, 4\")]),_vm._v(\"，若无，继续出栈\")])]),_c('pre',{pre:true},[_c('code',{pre:true,attrs:{\"v-pre\":\"\",\"class\":\"language-js\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"var\")]),_vm._v(\" postorderTraversal = \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-function\"}},[_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"function\")]),_vm._v(\" (\"),_c('span',{pre:true,attrs:{\"class\":\"hljs-params\"}},[_vm._v(\"root\")]),_vm._v(\") \")]),_vm._v(\"{\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"const\")]),_vm._v(\" result = [];\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"const\")]),_vm._v(\" stack = [];\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"let\")]),_vm._v(\" last = \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"null\")]),_vm._v(\"; \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"// 标记上一个访问的节点\")]),_vm._v(\"\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"let\")]),_vm._v(\" current = root;\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"while\")]),_vm._v(\" (current || stack.length > \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"0\")]),_vm._v(\") {\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"while\")]),_vm._v(\" (current) {\\n      stack.push(current);\\n      current = current.left;\\n    }\\n    current = stack[stack.length - \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-number\"}},[_vm._v(\"1\")]),_vm._v(\"];\\n    \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"if\")]),_vm._v(\" (!current.right || current.right == last) {\\n      current = stack.pop();\\n      result.push(current.val);\\n      last = current;\\n      current = \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-literal\"}},[_vm._v(\"null\")]),_vm._v(\"; \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-comment\"}},[_vm._v(\"// 继续弹栈\")]),_vm._v(\"\\n    } \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"else\")]),_vm._v(\" {\\n      current = current.right;\\n    }\\n  }\\n  \"),_c('span',{pre:true,attrs:{\"class\":\"hljs-keyword\"}},[_vm._v(\"return\")]),_vm._v(\" result;\\n}\\n\")])])])}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./210819-binary-tree-traversal.md?vue&type=template&id=ccf54f00&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}